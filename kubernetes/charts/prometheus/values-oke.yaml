kube-prometheus-stack:
  alertmanager:
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-oke"
    ingress:
      enabled: true
      pathType: Prefix
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/auth-url: https://auth2.siliconsheep.se/oauth2/auth?allowed_groups=admins
        nginx.ingress.kubernetes.io/auth-signin: https://auth2.siliconsheep.se/oauth2/start?rd=$scheme://$best_http_host$request_uri
        nginx.ingress.kubernetes.io/auth-response-headers: "x-auth-request-email, x-auth-request-groups"
      paths:
        - /
      hosts:
        - oke.alertmanager.siliconsheep.se
      tls:
        - secretName: oke-alertmanager-siliconsheep-se
          hosts:
            - oke.alertmanager.siliconsheep.se
  
  coreDns:
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-oke"
  kubeApiServer:
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-oke"
  kubelet:
    serviceMonitor:
      cAdvisorRelabelings:
        - action: replace
          sourceLabels: [__metrics_path__]
          targetLabel: metrics_path
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-oke"
      probesRelabelings:
        - action: replace
          sourceLabels: [__metrics_path__]
          targetLabel: metrics_path
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-oke"
  kubeScheduler:
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-oke"
  kubeControllerManager:
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-oke"
  kubeEtcd:
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-oke"
  kubeProxy:
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-oke"
  kube-state-metrics:
    prometheus:
      monitor:
        relabelings:
          - action: replace
            targetLabel: "cluster"
            replacement: "siliconsheep-oke"

  prometheusOperator:
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-oke"

  prometheus:
    prometheusSpec:
      ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-oke"
    service:
      type: LoadBalancer
    ingress:
      enabled: true
      pathType: Prefix
      ingressClassName: traefik
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/auth-url: https://auth2.siliconsheep.se/oauth2/auth?allowed_groups=admins
        nginx.ingress.kubernetes.io/auth-signin: https://auth2.siliconsheep.se/oauth2/start?rd=$scheme://$best_http_host$request_uri
        nginx.ingress.kubernetes.io/auth-response-headers: "x-auth-request-email, x-auth-request-groups"
      hosts:
        - oke.prometheus.siliconsheep.se
      paths:
        - /
      tls:
        - secretName: oke-prometheus-siliconsheep-se
          hosts:
            - oke.prometheus.siliconsheep.se
  
  prometheus-node-exporter:
    prometheus:
      monitor:
        relabelings:
          - action: replace
            targetLabel: "cluster"
            replacement: "siliconsheep-oke"

  grafana:
    enabled: false
