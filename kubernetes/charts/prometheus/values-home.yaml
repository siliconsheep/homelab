vault-secret-provider:
  enabled: true
  cluster: home
  roleName: grafana
  defaultObjectPath: auth/oauth-credentials/grafana
  objects:
    - name: client_id
      secretName: GF_AUTH_GENERIC_OAUTH_CLIENT_ID
    - name: client_secret
      secretName: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
  secretObjects: true
  secretName: grafana-oauth

kube-prometheus-stack:
  alertmanager:
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-home"
    ingress:
      enabled: true
      pathType: Prefix
      ingressClassName: traefik
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        traefik.ingress.kubernetes.io/router.priority: "10"
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: auth-ak-outpost-home@kubernetescrd
      paths:
        - /
      hosts:
        - home.alertmanager.siliconsheep.se
      tls:
        - secretName: home-alertmanager-siliconsheep-se
          hosts:
            - home.alertmanager.siliconsheep.se
  coreDns:
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-home"
  kubeApiServer:
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-home"
  kubelet:
    serviceMonitor:
      cAdvisorRelabelings:
        - action: replace
          sourceLabels: [__metrics_path__]
          targetLabel: metrics_path
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-home"
      probesRelabelings:
        - action: replace
          sourceLabels: [__metrics_path__]
          targetLabel: metrics_path
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-home"
  kubeScheduler:
    service:
      port: 10259
      targetPort: 10259
    serviceMonitor:
      https: true
      insecureSkipVerify: true
      relabelings:
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-home"
  kubeControllerManager:
    service:
      port: 10257
      targetPort: 10257
    serviceMonitor:
      https: true
      insecureSkipVerify: true
      relabelings:
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-home"
  kubeEtcd:
    service:
      port: 2381
      targetPort: 2381
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-home"
  kubeProxy:
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-home"
  kube-state-metrics:
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-home"
  
  prometheusOperator:
    admissionWebhooks:
      failurePolicy: Ignore
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-home"
  
  prometheus:
    podDisruptionBudget:
      enabled: true
      minAvailable: 1
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-home"
    ingress:
      enabled: true
      pathType: Prefix
      ingressClassName: traefik
      hosts:
        - home.prometheus.siliconsheep.se
      paths:
        - /
      tls:
        - hosts: [home.prometheus.siliconsheep.se]
          secretName: home-prometheus-siliconsheep-se
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        traefik.ingress.kubernetes.io/router.priority: "10"
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: auth-ak-outpost-home@kubernetescrd
    prometheusSpec:
      ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      additionalScrapeConfigs:
        - job_name: 'federate'
          scrape_interval: 15s
          honor_labels: true
          metrics_path: '/federate'
          params:
            'match[]':
              - '{job=~".*"}'
          static_configs:
            - targets:
              - '172.28.0.133:9090'
  prometheus-node-exporter:
    securityContext:
      runAsUser: 0
      runAsNonRoot: false
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-home"
  grafana:
    enabled: true
    testFramework:
      enabled: false
    serviceMonitor:
      enabled: true
      relabelings:
        - action: replace
          targetLabel: "cluster"
          replacement: "siliconsheep-home"
    ingress:
      enabled: true
      pathType: Prefix
      ingressClassName: traefik
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.priority: '10'
      hosts:
        - grafana.siliconsheep.se
      tls:
        - hosts:
            - grafana.siliconsheep.se
          secretName: grafana-siliconsheep-se
    persistence:
      enabled: false
    grafana.ini:
      server:
        root_url: https://grafana.siliconsheep.se
      auth.generic_oauth:
        name: authentik
        enabled: true
        scopes: openid email profile
        auth_url: https://auth.siliconsheep.se/application/o/authorize/
        token_url: https://auth.siliconsheep.se/application/o/token/
        api_url: https://auth.siliconsheep.se/application/o/userinfo/
        role_attribute_path: contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'
      auth:
        oauth_auto_login: true
        signout_redirect_url: https://auth.siliconsheep.se/application/o/grafana/end-session/
    envFromSecret: grafana-oauth
    extraSecretMounts:
      - name: secrets-fakemount
        mountPath: /mnt/secrets-fakemount
        readOnly: true
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: prometheus-home


