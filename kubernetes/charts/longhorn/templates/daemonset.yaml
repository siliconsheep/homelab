apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name }}-disk-config
  labels:
    app.kubernetes.io/name: longhorn-disk-config
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: longhorn-disk-config
      app.kubernetes.io/instance: {{ .Release.Name }}
      component: disk-config-ds
  template:
    metadata:
      name: {{ .Release.Name }}-disk-config
      labels:
        app.kubernetes.io/name: longhorn-disk-config
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: disk-config-ds
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: node.longhorn.io/create-default-disk
                  operator: DoesNotExist
      containers:
        - name: longhorn-disk-config
          image: ghcr.io/siliconsheep/kubectl:v1.24.1 # TODO give this docker image some CI with support for multi-arch (ARM64 & AMD64) (or write a simple app that does the annotation)
          command: ["sh", "-c"]
          args: ["kubectl annotate --overwrite node ${NODE_NAME} node.longhorn.io/default-disks-config=${DISK_CONFIG} && kubectl label nodes ${NODE_NAME} node.longhorn.io/create-default-disk='config'" ]
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: DISK_CONFIG
            value: {{ mustToJson .Values.diskConfig | squote }}
      serviceAccount: longhorn-disk-config