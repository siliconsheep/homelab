apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  app.kubernetes.io/name: {{ .Release.Name }}-redis
  app.kubernetes.io/instance: {{ .Release.Name }}-redis
  app.kubernetes.io/managed-by: {{ .Release.Service }}
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.redis.storageClassName }}
  resources:
    requests:
      storage: {{ .Values.redis.storageSize }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-redis
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-redis
    app.kubernetes.io/instance: {{ .Release.Name }}-redis
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-redis
      app.kubernetes.io/instance: {{ .Release.Name }}-redis
      component: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-redis
        app.kubernetes.io/instance: {{ .Release.Name }}-redis
        component: redis
    spec:
      containers:
      - name: redis-server
        image: {{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag | default "latest" }}
        imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
        args: ["--appendonly", "yes"]
        ports:
          - name: redis-server
            containerPort: 6379
        volumeMounts:
          - name: lv-storage
            mountPath: /data
        env:
          - name: ALLOW_EMPTY_PASSWORD
            value: "yes"
      volumes:
        - name: lv-storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-redis
---
apiVersion: v1
kind: Service
metadata:
  app.kubernetes.io/name: {{ .Release.Name }}-redis
  app.kubernetes.io/instance: {{ .Release.Name }}-redis
  app.kubernetes.io/managed-by: {{ .Release.Service }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app.kubernetes.io/name: {{ .Release.Name }}-redis
    app.kubernetes.io/instance: {{ .Release.Name }}-redis
    component: redis
  type: ClusterIP
  ports:
    - name: redis-port
      protocol: TCP
      port: 6379
      targetPort: 6379